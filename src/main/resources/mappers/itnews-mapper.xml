<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="Itnews"> 
  <select id="getList" resultType="kh.hello.dto.ItnewsDTO">
		select * from itnews order by seq desc
	</select>
	
	<select id="getDTO" resultType="kh.hello.dto.ItnewsDTO">
		select * from itnews where seq = #{seq}
	</select>
	
	<select id="selectByPage"  resultType="kh.hello.dto.ItnewsDTO">
		select * from (select itnews.*,(select count(*) from itnewsComments where itSeq = itnews.seq) as commentCount, 
		row_number() over (order by seq desc) as rown from itnews) where rown between #{start} and #{end}
	</select>
	
	<select id="getTotal" resultType="integer">
		select count(*) from itnews 
	</select>
	
	<select id="getItnewsSeq" resultType="integer">
		select itnewsSeq.nextval from dual
	</select>
	
	<insert id="writeItnews" parameterType="kh.hello.dto.ItnewsDTO">
		insert into itnews values(#{seq}, #{writer}, #{title}, #{content},  sysdate, 0, #{id})
	</insert>
	
	<delete id="remove" parameterType="integer">
		delete from itnews where seq=#{seq}
	</delete>
	
	<insert id="insertComment" parameterType="kh.hello.dto.ItnewsCoDTO">
		insert into itnewscomments values(itnewsCommentsSeq.nextval, #{itSeq}, #{writer}, #{content},sysdate, #{id})
	</insert>
	
	<select id="coList" resultType="kh.hello.dto.ItnewsCoDTO">
		select itnewsComments.*, profileImg from itnewsComments inner join member on itnewsComments.id = member.id where itSeq=${seq} 
	</select>
	
	<delete id="coRemove" parameterType="java.util.Map">
		delete from itnewscomments where itSeq = #{itSeq} and seq=#{seq}
	</delete>
	
	<update id="updateItnews"  parameterType="kh.hello.dto.ItnewsCoDTO">
		update itnews set content=#{content}, title=#{title} where seq=#{seq}
	</update>
	
	<delete id="coAllRemove" parameterType="integer">
		delete from itnewscomments where itSeq=#{seq}
	</delete>
	
	<update id="coModify"  parameterType="kh.hello.dto.ItnewsCoDTO">
		update itnewscomments set content=#{content} where seq=#{seq}
	</update>
	
	<select id="getItSeqBySeq" parameterType="integer" resultType="integer">
		select itSeq from itnewscomments where seq = #{seq}
	</select>
	
	<select id="scrapDupCheck" parameterType="kh.hello.dto.ScrapDTO" resultType="integer">
		select count(*) from scrap where id=#{id} and category=#{category} and categorySeq=#{categorySeq}
	</select>
	
	<select id="earlierSeq" resultType="integer">
		select scrapSeq.nextval from dual
	</select>
	
	<insert id="scrapItnews">
		insert into scrap values(#{seq}, #{id}, #{category}, #{categorySeq})
	</insert>
	
	<update id="increViewCount" parameterType="integer">
		update itnews set viewCount=(select viewCount from itnews where seq = #{seq})+1 where seq =#{seq}
	</update>
	
	<insert id="insertImg" parameterType="kh.hello.dto.ItnewsImgDTO">
		insert into itnewsImg values (itnewsImgSeq.nextVal, #{itSeq}, #{oriName}, #{sysName})
	</insert>
	
	<select id="selectByPageSrch" resultType="kh.hello.dto.ItnewsDTO" parameterType="java.util.Map">
		select * 
		<choose>
		 <when test="cate == 'cateAll'">								
			 from (select itnews.*, row_number() over (order by seq desc) as rown from itnews where (lower(title) like lower('%${search}%')) or (lower(writer) like lower('%${search}%'))) where rown between #{start} and #{end} 
		</when>
		<when test="cate == 'cateTitle'">								
			 from (select itnews.*, row_number() over (order by seq desc) as rown from itnews where (lower(title) like lower('%${search}%'))) where rown between #{start} and #{end}
		</when>
		<when test="cate == 'cateWriter'">								
			 from (select itnews.*, row_number() over (order by seq desc) as rown from itnews where (lower(writer) like lower('%${search}%'))) where rown between #{start} and #{end}
		</when>
		</choose>
	</select>
	
	<select id="getTotalSearch" parameterType="java.util.Map" resultType="integer">
		select count(*) from itnews
		 <choose>
		 <when test="cate == 'cateAll'">								
			 where (lower(title) like lower('%${search}%')) or (lower(writer) like lower('%${search}%'))
		</when>
		<when test="cate == 'cateWriter'">								
			 where (lower(writer) like lower('%${search}%'))
		</when>
		<when test="cate == 'cateTitle'">								
			 where (lower(title) like lower('%${search}%'))
		</when>
		</choose>
	</select>
	
	<update id="changePoint" parameterType="java.util.Map">
		update member set point = ((select point from member where id = #{id})+#{point}) where id=#{id}
	</update>
	
	<select id="getIdBySeq" resultType="string">
		select id from itnews where seq=#{seq}
	</select>
	
	<select id="getIdByCoSeq" resultType="string">
		select id from itnewscomments where seq=#{seq}
	</select>
	
	<update id="pointCheck" parameterType="string">
		update member set memlevel=1 where id = #{id} and point &lt; 0
	</update>
	
	<select id="getImgByWriter" parameterType="string" resultType="string">
		select profileImg from member where nickName=#{writer}
	</select>
	
	<select id="reportDuplCheck" resultType="integer" parameterType="java.util.Map">
		select count(*) from reportedBoard where reporterID=#{id} and boardName='Itnews' and boardSeq=#{seq}
	</select>
	<insert id="insertReport" parameterType="kh.hello.dto.ReportDTO">
		insert into reportedBoard values(reportedBoardSeq.nextval, 'N', 'Itnews', #{boardSeq}, #{title}, #{reporterNick}, #{reporterID} , sysdate, #{reason}, null)
	</insert>
	
</mapper> 