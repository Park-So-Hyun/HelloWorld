<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Bamboo">
	
	<select id="getBambooDetailView" resultType="kh.hello.dto.BambooDTO">
 		select bamboo.*, profileImg from bamboo inner join member on bamboo.writer=member.id where seq=#{value}
	</select>
	
	<select id="getMemLevel" parameterType="String" resultType="integer">
		select memLevel from member where id=#{id}
	</select>
	
	<insert id="insertBamboo" parameterType="kh.hello.dto.BambooDTO">
		insert into bamboo values(#{seq},#{writer},#{title},#{content},sysdate,0,#{nonTagContents})
	</insert>
	
	<update id="updateBamboo" parameterType="kh.hello.dto.BambooDTO">
		update bamboo set title=#{title}, content=#{content}, nonTagContents=#{nonTagContents} where seq=#{seq}
	</update>
	
	<update id="updateBambooViewCount">
		update bamboo set viewCount=viewCount+1 where seq=#{value}
	</update>
	
	<delete id="deleteBamboo">
		delete from bamboo where seq=#{value}
	</delete>
	
	<!-- 페이지네비 -->
	<select id="recordBambooListTotalCount" resultType="integer">
		select count(seq) from bamboo
	</select>
	<select id="bambooListByPage" resultType="kh.hello.dto.BambooDTO">
		select bamboo.*,(select count(*) from bambooComments where bamSeq=bamboo.seq) as commentCount from (select bamboo.*, row_number() over(order by seq desc) rown from bamboo) bamboo where rown between #{start} and #{end} order by seq desc
	</select>
	
	<!-- 조건별 게시판목록 검색 -->
	<select id="bambooSearchTotalCount" parameterType="java.util.Map" resultType="integer">
		 select count(seq) from bamboo
		 <choose>
		 <when test="value == 'all'">								
			 where (lower(title) like lower('%${search}%')) or (lower(nonTagContents) like lower('%${search}%'))
		</when>
		<when test="value == 'title'">								
			 where (lower(title) like lower('%${search}%'))
		</when>
		</choose>
	</select>
	
	<select id="bambooSearchByPage" resultType="kh.hello.dto.BambooDTO" parameterType="java.util.Map">
		select * 
		<choose>
		 <when test="value == 'all'">								
			 from (select bamboo.*, row_number() over (order by seq desc) as rown, (select count(*) from bambooComments where bamSeq=bamboo.seq) as commentCount from bamboo where (lower(title) like lower('%${search}%')) or (lower(nonTagContents) like lower('%${search}%'))) where rown between #{start} and #{end}
			 
		</when>
		<when test="value == 'title'">								
			 from (select bamboo.*, row_number() over (order by seq desc) as rown, (select count(*) from bambooComments where bamSeq=bamboo.seq) as commentCount from bamboo where (lower(title) like lower('%${search}%'))) where rown between #{start} and #{end}
		</when>
		</choose>
	</select>
	
<!-- 	이미지 업로드 -->
	<select id="getBambooSeq" resultType="integer">
		select bambooSeq.nextval from dual
	</select>
	<insert id="insertImg" parameterType="java.util.Map">
		insert into bambooImgs values(bambooImgsSeq.nextVal, #{bamSeq}, #{fileName})
	</insert>
	
<!-- 	포인트 점수 -->
	<update id="writePoint" parameterType="String">
		update member set point=point+10 where id=#{writer}
	</update>
	
	<update id="deleteWritePoint" parameterType="String">
		update member set point=point-15 where id=#{writer}
	</update>
	
<!-- 	신고하기 -->
<!-- 	<select id="reportDupCheck" parameterType="java.util.Map"> -->
<!-- 		select seq from reportBoard where id=#{id}, boardSeq=#{seq} -->
<!-- 	</select> -->
<!-- 	<insert id="report" parameterType="java.util.Map"> -->
<!-- 		insert into reportedBoard values(reportedBoardSeq.nextval, 'N', Bamboo, #{seq}, #{title},  #{id}, #{nickName}, sysdate, #{reason}, '') -->
<!-- 	</insert> -->
	
	<select id="reportDuplCheck" resultType="integer" parameterType="java.util.Map">
		select count(*) from reportedBoard where reporterID=#{id} and boardName='Bamboo' and boardSeq=#{seq}
	</select>
	<insert id="insertReport" parameterType="kh.hello.dto.ReportDTO">
		insert into reportedBoard values(reportedBoardSeq.nextval, 'N', 'Bamboo', #{boardSeq}, #{title}, #{reporterNick}, #{reporterID} , sysdate, #{reason}, null)
	</insert>
<!-- 	포인트 -면 강등 -->
	<update id="downLevel">
		update member set memlevel=1 where <![CDATA[point<0]]>
	</update>
</mapper>